namespace Sardine.Devices.Hamamatsu.Camera.API
{
    public partial struct HamamatsuError
    {
        private enum ERR : uint
        {
            BUSY = 0x80000101,   // API cannot process in busy state.
            NOTREADY = 0x80000103,   // API requires ready state.
            NOTSTABLE = 0x80000104,   // API requires stable or unstable state.
            UNSTABLE = 0x80000105,   // API does not support in unstable state.
            NOTBUSY = 0x80000107,   // API requires busy state.
            EXCLUDED = 0x80000110,   // some resource is exclusive and already used
            COOLINGTROUBLE = 0x80000302,   // something happens near cooler
            NOTRIGGER = 0x80000303,   // no trigger when necessary. Some camera supports this error.
            TEMPERATURE_TROUBLE = 0x80000304,   // camera warns its temperature
            TOOFREQUENTTRIGGER = 0x80000305,   // input too frequent trigger. Some camera supports this error.
            ABORT = 0x80000102,   // abort process
            TIMEOUT = 0x80000106,   // timeout
            LOSTFRAME = 0x80000301,   // frame data is lost
            MISSINGFRAME_TROUBLE = 0x80000f06,   // frame is lost but reason is low lever driver's bug
            INVALIDIMAGE = 0x80000321,   // hpk format data is invalid data
            NORESOURCE = 0x80000201,   // not enough resource except memory
            NOMEMORY = 0x80000203,   // not enough memory
            NOMODULE = 0x80000204,   // no sub module
            NODRIVER = 0x80000205,   // no driver
            NOCAMERA = 0x80000206,   // no camera
            NOGRABBER = 0x80000207,   // no grabber
            NOCOMBINATION = 0x80000208,   // no combination on registry
            FAILOPEN = 0x80001001,   // DEPRECATED
            INVALIDMODULE = 0x80000211,   // dcam_init() found invalid module
            INVALIDCOMMPORT = 0x80000212,   // invalid serial port
            FAILOPENBUS = 0x81001001,   // the bus or driver are not available
            FAILOPENCAMERA = 0x82001001,   // camera report error during opening
            FRAMEGRABBER_NEEDS_FIRMWAREUPDATE = 0x80001002,   // need to update frame grabber firmware to use the camera
            INVALIDCAMERA = 0x80000806,   // invalid camera
            INVALIDHANDLE = 0x80000807,   // invalid camera handle
            INVALIDPARAM = 0x80000808,   // invalid parameter
            INVALIDVALUE = 0x80000821,   // invalid property value
            OUTOFRANGE = 0x80000822,   // value is out of range
            NOTWRITABLE = 0x80000823,   // the property is not writable
            NOTREADABLE = 0x80000824,   // the property is not readable
            INVALIDPROPERTYID = 0x80000825,   // the property id is invalid
            NEWAPIREQUIRED = 0x80000826,   // old API cannot present the value because only new API need to be used
            WRONGHANDSHAKE = 0x80000827,   // this error happens DCAM get error code from camera unexpectedly
            NOPROPERTY = 0x80000828,   // there is no altenative or influence id, or no more property id
            INVALIDCHANNEL = 0x80000829,   // the property id specifies channel but channel is invalid
            INVALIDVIEW = 0x8000082a,   // the property id specifies channel but channel is invalid
            INVALIDSUBARRAY = 0x8000082b,   // the combination of subarray values are invalid. e.g. DCAM_IDPROP_SUBARRAYHPOS + DCAM_IDPROP_SUBARRAYHSIZE is greater than the number of horizontal pixel of sensor.
            ACCESSDENY = 0x8000082c,   // the property cannot access during this DCAM STATUS
            NOVALUETEXT = 0x8000082d,   // the property does not have value text
            WRONGPROPERTYVALUE = 0x8000082e,   // at least one property value is wrong
            DISHARMONY = 0x80000830,   // the paired camera does not have same parameter
            FRAMEBUNDLESHOULDBEOFF = 0x80000832,   // framebundle mode should be OFF under current property settings
            INVALIDFRAMEINDEX = 0x80000833,   // the frame index is invalid
            INVALIDSESSIONINDEX = 0x80000834,   // the session index is invalid
            NOCORRECTIONDATA = 0x80000838,
            CHANNELDEPENDENTVALUE = 0x80000839,   // each channel has own property value so can't return overall property value.
            VIEWDEPENDENTVALUE = 0x8000083a,   // each view has own property value so can't return overall property value.
            INVALIDCALIBSETTING = 0x8000083e,   // the setting of properties are invalid on sampling calibration data. some camera has the limitation to make calibration data. e.g. the trigger source is INTERNAL only and read out direction isn't trigger.
            LESSSYSTEMMEMORY = 0x8000083f,   // the sysmte memory size is too small. PC doesn't have enough memory or is limited memory by 32bit OS.
            NOTSUPPORT = 0x80000f03,   // camera does not support the function or property with current settings
            FAILREADCAMERA = 0x83001002,   // failed to read data from camera
            FAILWRITECAMERA = 0x83001003,   // failed to write data to the camera
            CONFLICTCOMMPORT = 0x83001004,   // conflict the com port name user set
            OPTICS_UNPLUGGED = 0x83001005,   // Optics part is unplugged so please check it.
            FAILCALIBRATION = 0x83001006,   // fail calibration
            INVALIDMEMBER_3 = 0x84000103,
            INVALIDMEMBER_5 = 0x84000105,
            INVALIDMEMBER_7 = 0x84000107,
            INVALIDMEMBER_8 = 0x84000108,
            INVALIDMEMBER_9 = 0x84000109,
            FAILEDOPENRECFILE = 0x84001001,   // DCAMREC failed to open the file
            INVALIDRECHANDLE = 0x84001002,   // DCAMREC is invalid handle
            FAILEDWRITEDATA = 0x84001003,   // DCAMREC failed to write the data
            FAILEDREADDATA = 0x84001004,   // DCAMREC failed to read the data
            NOWRECORDING = 0x84001005,   // DCAMREC is recording data now
            WRITEFULL = 0x84001006,   // DCAMREC writes full frame of the session
            ALREADYOCCUPIED = 0x84001007,   // DCAMREC handle is already occupied by other HDCAM
            TOOLARGEUSERDATASIZE = 0x84001008,   // DCAMREC is set the large value to user data size
            NOIMAGE = 0x84001804,   // not stored image in buffer on bufrecord
            INVALIDWAITHANDLE = 0x84002001,   // DCAMWAIT is invalid handle
            NEWRUNTIMEREQUIRED = 0x84002002,   // DCAM Module Version is older than the version that the camera requests
            VERSIONMISMATCH = 0x84002003,   // Camre returns the error on setting parameter to limit version
            RUNAS_FACTORYMODE = 0x84002004,   // Camera is running as a factory mode
            IMAGE_UNKNOWNSIGNATURE = 0x84003001,   // sigunature of image header is unknown or corrupted
            IMAGE_NEWRUNTIMEREQUIRED = 0x84003002,   // version of image header is newer than version that used DCAM supports
            IMAGE_ERRORSTATUSEXIST = 0x84003003,   // image header stands error status
            IMAGE_HEADERCORRUPTED = 0x84004004,   // image header value is strange
            IMAGE_BROKENCONTENT = 0x84004005,   // image content is corrupted
            UNKNOWNMSGID = 0x80000801,   // unknown message id
            UNKNOWNSTRID = 0x80000802,   // unknown string id
            UNKNOWNPARAMID = 0x80000803,   // unkown parameter id
            UNKNOWNBITSTYPE = 0x80000804,   // unknown bitmap bits type
            UNKNOWNDATATYPE = 0x80000805,   // unknown frame data type
            NONE = 0,            // no error, nothing to have done
            INSTALLATIONINPROGRESS = 0x80000f00,   // installation progress
            UNREACH = 0x80000f01,   // internal error
            UNLOADED = 0x80000f04,   // calling after process terminated
            THRUADAPTER = 0x80000f05,
            NOCONNECTION = 0x80000f07,   // HDCAM lost connection to camera
            NOTIMPLEMENT = 0x80000f02,   // not yet implementation
            APIINIT_INITOPTIONBYTES = 0xa4010003,   // "API_INIT has a invalid parameter is initoptionbytes!"
            APIINIT_INITOPTION = 0xa4010004,   // "API_INIT has a invalid parameter is initoption!"
            INITOPTION_COLLISION_BASE = 0xa401C000,
            INITOPTION_COLLISION_MAX = 0xa401FFFF,
            SUCCESS = 1,            // no error, general success code, app should check the value is positive
        }
    }
}