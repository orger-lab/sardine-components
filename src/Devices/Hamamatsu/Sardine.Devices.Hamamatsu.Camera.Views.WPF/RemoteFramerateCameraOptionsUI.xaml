<sardine:VesselUserControl
             x:Class="Sardine.Devices.Hamamatsu.Camera.Views.WPF.RemoteFramerateCameraOptionsUI"
             x:TypeArguments="hamamatsu:HamamatsuCamera"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:hamamatsu="clr-namespace:Sardine.Devices.Hamamatsu.Camera;assembly=Sardine.Devices.Hamamatsu.Camera"
             xmlns:hamamatsuAPI="clr-namespace:Sardine.Devices.Hamamatsu.Camera.API;assembly=Sardine.Devices.Hamamatsu.Camera.API"
             xmlns:sardine="clr-namespace:Sardine.Core.Views.WPF;assembly=Sardine.Core.Views.WPF"
             xmlns:local="clr-namespace:Sardine.Devices.Hamamatsu.Camera.Views.WPF"
             UpdateOnlyWithEvents ="True"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance IsDesignTimeCreatable=False, Type=hamamatsu:HamamatsuCamera}"
             d:DesignHeight="250" d:DesignWidth="600" Background="Gray">
    <UserControl.Resources>
        <local:PixelSizeToCameraSizeConverter x:Key="PixelSizeToCameraSize"/>
        <local:PixelSizeToThicknessConverter x:Key="PixelSizeToThickness"/>
    </UserControl.Resources>
    <Grid>
        <DockPanel>
            <StackPanel DockPanel.Dock="Left">
                <WrapPanel>
                    <Rectangle Fill="Transparent" Width="10">
                        <Rectangle.Style>
                            <Style TargetType="Rectangle">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=CaptureRegionValidated, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Stroke" Value="Green"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CaptureRegionValidated, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                        <Setter Property="Stroke" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Rectangle.Style>
                    </Rectangle>

                    <StackPanel>
                        <WrapPanel>
                            <StackPanel>
                                <Label Content="Width"/>
                                <TextBox Text="{Binding Path=HSize, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                            </StackPanel>
                            <StackPanel>
                                <Label Content="Height"/>
                                <TextBox Text="{Binding Path=VSize, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                            </StackPanel>
                        </WrapPanel>
                        <WrapPanel>
                            <StackPanel>
                                <Label Content="Horizontal Offset"/>
                                <TextBox Text="{Binding Path=HOffset, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                            </StackPanel>
                            <StackPanel>
                                <Label Content="Vertical Offset"/>
                                <TextBox Text="{Binding Path=VOffset, Mode=TwoWay, UpdateSourceTrigger=LostFocus}"/>
                            </StackPanel>
                        </WrapPanel>
                        <WrapPanel>
                            <Label Content="Binning"/>
                            <ComboBox x:Name="ComboBox_Binning" SelectedItem="{Binding Path=Binning, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectionChanged="ComboBox_Binning_SelectionChanged"/>
                        </WrapPanel>
                        <Button x:Name="Button_UpdateRegion" Content="Update Region" Click="Button_UpdateRegion_Click"/>
                    </StackPanel>
                </WrapPanel>
                <StackPanel Margin="10,10,0,0">
                    <WrapPanel>
                        <Label Content="Capture Speed"/>
                        <ComboBox x:Name="ComboBox_CaptureSpeed" Width="90" SelectedItem="{Binding Path=ReadoutSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBox.Style>
                                <Style TargetType="ComboBox">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Status}" Value="Busy">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>
                        </ComboBox>
                        <Label Content="Bundle Size" Margin="10,0,0,0"/>
                        <TextBox Text="{Binding Path=BundleSize, UpdateSourceTrigger=PropertyChanged}" Width="70">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Status}" Value="Busy">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </WrapPanel>

                    <WrapPanel>
                        <StackPanel>
                            <Label Content="Expected Maximum Framerate"/>
                            <TextBox Text="{Binding Path=MaxExpectedFPS, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" IsEnabled="False"/>
                        </StackPanel>
                        <StackPanel>
                            <Label Content="Current Estimated Framerate"/>
                            <TextBox Text="{Binding Path=EstimatedFramerate, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" IsEnabled="False"/>
                        </StackPanel>
                    </WrapPanel>
                    <Button x:Name="Button_StartStop"  Click="Button_StartStop_Click">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Content" Value="Start"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Status}" Value="Busy">
                                        <Setter Property="Content" Value="Stop"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=CaptureRegionValidated}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </StackPanel>

            <Canvas  Width="210" Height="210" DockPanel.Dock="Right">
                <Rectangle Fill="Black" Width="210" Height="210"/>
                <Rectangle Fill="White" Width="200" Height="200" Margin="5,5,5,5"/>
                <Rectangle Fill="Orange" x:Name="Rectangle_CaptureRegion"
                                   Width="{Binding Path=HSize, Converter={StaticResource PixelSizeToCameraSize}, UpdateSourceTrigger=PropertyChanged}"
                                   Height="{Binding Path=VSize, Converter={StaticResource PixelSizeToCameraSize}, UpdateSourceTrigger=PropertyChanged}">
                    <Rectangle.Margin>
                        <MultiBinding Converter="{StaticResource PixelSizeToThickness}">
                            <Binding Path="HOffset" UpdateSourceTrigger="PropertyChanged"/>
                            <Binding Path="VOffset" UpdateSourceTrigger="PropertyChanged"/>
                        </MultiBinding>
                    </Rectangle.Margin>
                </Rectangle>

            </Canvas>


        </DockPanel>


    </Grid>
</sardine:VesselUserControl>
