<sardine:VesselUserControl x:Class="Sardine.Sequencer.Views.WPF.ExperimentController_UI"
                           x:TypeArguments="sequencer:ExperimentController"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                           xmlns:sardine ="clr-namespace:Sardine.Core.Views.WPF;assembly=Sardine.Core.Views.WPF"
                           xmlns:sequencer="clr-namespace:Sardine.Sequencer;assembly=Sardine.Sequencer"
                           xmlns:local="clr-namespace:Sardine.Sequencer.Views.WPF"
                           xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                           mc:Ignorable="d" 
                           Background="Gray"
                           Width="400"
                           d:DataContext="{d:DesignData IsDesignTimeCreatable=False, Type=sequencer:ExperimentController}"
                           >
    <UserControl.Resources>
        <local:BlockItemToStringConverter x:Key="BlockItemConverter"/>
    </UserControl.Resources>
    <Grid>
        <StackPanel>
            <ListBox x:Name="ListBox_Items" Height="100" ScrollViewer.VerticalScrollBarVisibility="Visible" SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=sardine:VesselUserControl}, Path=SelectedItem, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=sardine:VesselUserControl}, Path=Items, UpdateSourceTrigger=PropertyChanged}"/>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition  Width="50"/>
                    <ColumnDefinition  Width="50"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button x:Name="Button_Up" Content="/\" Grid.Row="0" Click="Button_Up_Click"/>
                    <Button x:Name="Button_Down" Content="\/" Grid.Row="1" Click="Button_Down_Click"/>
                </Grid>
                <Button x:Name="Button_Add" Content="Add" Grid.Column="1" Click="Button_Add_Click"/>
                <Button x:Name="Button_Remove" Content="Remove" Grid.Column="2" Click="Button_Remove_Click"/>

                <Grid Grid.Column="3" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Button x:Name="Button_Import" Content="Import" Grid.Row="0" Click="Button_Import_Click"/>
                    <Button x:Name="Button_Export" Content="Export" Grid.Row="1" Click="Button_Export_Click"/>
                </Grid>
            </Grid>
            <StackPanel>
                <ComboBox x:Name="ComboBox_ItemType" SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=sardine:VesselUserControl}, Path=ItemType, UpdateSourceTrigger=LostFocus}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource BlockItemConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <WrapPanel>
                    <Label Content="Repetitions"/>
                    <TextBox x:Name="TextBox_Repetitions" Text="{Binding RelativeSource={RelativeSource AncestorType=sardine:VesselUserControl}, Path=Repetitions, UpdateSourceTrigger=LostFocus}" Width="70"/>
                </WrapPanel>
                <Line Width="50" Height="10" X1="0" X2="50"  Y1="5" Y2="5"  Fill="Black" Stroke="Black"/>
                
                <WrapPanel>
                    <Label Content="Frame Rate"/>
                    <TextBox x:Name="TextBox_FrameRate" Text="{Binding Path=FrameRate, UpdateSourceTrigger=PropertyChanged}" Width="70">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsRunning}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                </WrapPanel>

                <Button x:Name="Button_Arm" d:Content="Arm" Click="Button_Arm_Click">
                    <Button.Style>
                        <Style TargetType="Button" >
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Sequencer.IsArming, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Sequencer.IsArmed, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="Content" Value="Arm"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Sequencer.IsArmed, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="Content" Value="Disarm"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Sequencer.IsRunning, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </StackPanel>
    </Grid>
</sardine:VesselUserControl>
